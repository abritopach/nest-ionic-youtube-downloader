var e=require("typescript"),t=require("@typescript-eslint/experimental-utils"),n=require("@angular/compiler"),a=require("aria-query");function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=r(e);function o(e,t){const n=(e=e.replace(/\r\n/g,"\n")).indexOf(t);return[n,n+t.length]}const i=new Map;var c={"extract-inline-html":{preprocess:function(e,t){const n=[e];if(!function(e,t){return!![".component.ts",".page.ts",".dialog.ts",".modal.ts",".popover.ts",".bottomsheet.ts",".snackbar.ts"].some(e=>t.endsWith(e))||!(!e.includes("Component")||!e.includes("@angular/core"))}(e,t))return n;try{const a=s.default.createSourceFile(t,e,s.default.ScriptTarget.Latest,!0),r=a.statements.filter(e=>s.default.isClassDeclaration(e));if(!r||!r.length)return n;const c=[];for(const e of r)if(e.decorators)for(const t of e.decorators)s.default.isCallExpression(t.expression)&&s.default.isIdentifier(t.expression.expression)&&"Component"===t.expression.expression.text&&c.push(t);if(!c||!c.length)return n;const l=[e];let u=0;for(const t of c){if(!s.default.isDecorator(t)||!s.default.isCallExpression(t.expression)||1!==t.expression.arguments.length)continue;const n=t.expression.arguments[0];if(!s.default.isObjectLiteralExpression(n))continue;const r=n.properties.find(e=>e&&e.name&&"template"===e.name.getText());if(n.properties.find(e=>e&&e.name&&"templateUrl"===e.name.getText())||!r)continue;if(!s.default.isPropertyAssignment(r)||!s.default.isStringLiteralLike(r.initializer))continue;const c=r.initializer.text,m=o(e,c),p=`inline-template-${++u}.component.html`;i.set(p,{range:m,lineAndCharacter:{start:a.getLineAndCharacterOfPosition(m[0]),end:a.getLineAndCharacterOfPosition(m[1])}}),l.push({text:c,filename:p})}return l}catch(e){return console.log(e),console.error("preprocess: ERROR could not parse @Component() metadata",t),n}},postprocess:function(e,t){const n=e[0];if(1===e.length)return n;const a=e.slice(1);return[...n,...[].concat(...a.map((e,t)=>{const n=`inline-template-${++t}.component.html`,a=i.get(n);return a?e.map(e=>{if(e.line=e.line+a.lineAndCharacter.start.line,e.endLine=e.endLine+a.lineAndCharacter.start.line,e.fix){const t=a.range[0];e.fix.range=[t+e.fix.range[0],t+e.fix.range[1]]}return e}):[]}))]},supportsAutofix:!0}};const l=t.ESLintUtils.RuleCreator(e=>"https://github.com/angular-eslint/angular-eslint");function u(e){return m(e),e.parserServices}function m(e){var t,n;if(null==(t=e.parserServices)||!t.convertNodeSourceSpanToLoc||null==(n=e.parserServices)||!n.convertElementSourceSpanToLoc)throw new Error("You have used a rule which requires '@angular-eslint/template-parser' to be used as the 'parser' in your ESLint config.")}const p=Symbol("PROPERTY");function d(e,t){const a=e.attributes.find(e=>e.name===t);if(a)return a.value;const r=e.inputs.find(e=>e.name===t);return r&&r.value instanceof n.ASTWithSource?r.value.ast instanceof n.LiteralPrimitive?r.value.ast.value:p:null}var g=l({name:"accessibility-alt-text",meta:{type:"suggestion",docs:{description:"Enforces alternate text for elements which require the alt, aria-label, aria-labelledby attributes.",category:"Best Practices",recommended:!1},schema:[],messages:{accessibilityAltText:"<{{element}}/> element must have a text alternative."}},defaultOptions:[],create(e){const t=u(e);return{"Element[name=/^(img|area|object|input)$/]"(n){if(!function(e){return"img"===e.name?function(e){return e.attributes.some(({name:e})=>b(e))||e.inputs.some(({name:e})=>b(e))}(e):"object"===e.name?function(e){let t=!1,n=!1;for(const a of e.attributes)t="title"===a.name,n=y(a.name);if(t||n)return!0;let a=!1,r=!1;for(const t of e.inputs)a="title"===t.name,r=y(t.name);return!(!a&&!r)||e.children.length>0&&!!e.children[0].value}(e):"area"===e.name?f(e):function(e){return"image"!==d(e,"type")||f(e)}(e)}(n)){const a=t.convertElementSourceSpanToLoc(e,n);e.report({loc:a,messageId:"accessibilityAltText",data:{element:n.name}})}}}}});function f(e){let t=!1,n=!1;for(const a of e.attributes)t=b(a.name),n=y(a.name);if(t||n)return!0;let a=!1,r=!1;for(const t of e.inputs)a=b(t.name),r=y(t.name);return a||r}function y(e){return"aria-label"===e||"aria-labelledby"===e}function b(e){return"alt"===e}const h=new Set(["innerHtml","innerHTML","innerText"]);var x=l({name:"accessibility-elements-content",meta:{type:"suggestion",docs:{description:"Ensures that the heading, anchor and button elements have content in it.",category:"Best Practices",recommended:!1},schema:[],messages:{accessibilityElementsContent:"<{{element}}/> should have content."}},defaultOptions:[],create(e){const t=u(e);return{"Element[name=/^(a|button|h1|h2|h3|h4|h5|h6)$/][children.length=0]"({inputs:n,name:a,sourceSpan:r}){if(n.some(({name:e})=>h.has(e)))return;const s=t.convertNodeSourceSpanToLoc(r);e.report({loc:s,messageId:"accessibilityElementsContent",data:{element:a}})}}}});const v={items:{type:"string"},type:"array",uniqueItems:!0},S=["button","input","meter","output","progress","select","textarea"],A=["for","htmlFor"],T=["label"];var I=l({name:"accessibility-label-for",meta:{type:"suggestion",docs:{description:"Ensures that a label element/component is associated with a form element",category:"Best Practices",recommended:!1},schema:[{additionalProperties:!1,properties:{controlComponents:v,labelAttributes:v,labelComponents:v},type:"object"}],messages:{accessibilityLabelFor:"A label element/component must be associated with a form element"}},defaultOptions:[{controlComponents:S,labelAttributes:A,labelComponents:T}],create(e,[t]){const a=u(e),{controlComponents:r,labelAttributes:s,labelComponents:o}=function({controlComponents:e,labelAttributes:t,labelComponents:n}){return{controlComponents:new Set([...S,...null!=e?e:[]]),labelAttributes:new Set([...A,...null!=t?t:[]]),labelComponents:new Set([...T,...null!=n?n:[]])}}(t);var i;return{[`Element[name=${i=[...o],RegExp(`^(${i.join("|")})$`)}]`](t){const o=new Set([...t.attributes,...t.inputs].map(({name:e})=>e));if([...s].some(e=>o.has(e))||function(e,t){return Boolean([...e].some(e=>{return a=e,function e({children:t}){return t.some(t=>t instanceof n.TmplAstElement&&(t.name===a||e(t)))}(t);var a}))}(r,t))return;const i=a.convertNodeSourceSpanToLoc(t.sourceSpan);e.report({loc:i,messageId:"accessibilityLabelFor"})}}}}),E=l({name:"accessibility-table-scope",meta:{type:"suggestion",docs:{description:"Ensures that scope is not used on any element except <th>",category:"Best Practices",recommended:!1},schema:[],messages:{accessibilityTableScope:"Scope attribute can only be on <th> element"}},defaultOptions:[],create(e){const t=u(e);return{'Element[name!="th"] > :matches(BoundAttribute[name="scope"], TextAttribute[name="scope"])'({sourceSpan:n}){const a=t.convertNodeSourceSpanToLoc(n);e.report({loc:a,messageId:"accessibilityTableScope"})}}}}),C=l({name:"accessibility-valid-aria",meta:{type:"suggestion",docs:{description:"Ensures that correct ARIA attributes and respective values are used",category:"Best Practices",recommended:!1},schema:[],messages:{accessibilityValidAria:"The `{{attribute}}` is an invalid ARIA attribute",accessibilityValidAriaValue:"The `{{attribute}}` has an invalid value. Check the valid values at https://raw.githack.com/w3c/aria/stable/#roles"}},defaultOptions:[],create(e){const t=u(e);return{"BoundAttribute[name=/^aria-.*/], TextAttribute[name=/^aria-.*/]"(r){const{name:s,sourceSpan:o}=r,i=a.aria.get(s),c=t.convertNodeSourceSpanToLoc(o);if(!i)return void e.report({loc:c,messageId:"accessibilityValidAria",data:{attribute:s}});const l=function(e){return e instanceof n.TmplAstBoundAttribute?e.value.ast:e}(r);(function(e){return!function(e){return e instanceof n.LiteralArray||e instanceof n.LiteralMap}(e)&&!function(e){return e instanceof n.LiteralPrimitive||e instanceof n.TmplAstTextAttribute}(e)})(l)||function({allowundefined:e,type:t,values:n},a){if(e&&k(a))return!0;switch(t){case"boolean":return B(a);case"tristate":return B(a)||k(a);case"id":case"idlist":return!0;case"integer":return r=a,!Number.isNaN(r)&&parseInt(Number(r))==r&&!Number.isNaN(parseInt(r,10));case"number":return function(e){return!Number.isNaN(Number.parseFloat(e))&&Number.isFinite(e)}(a);case"string":return function(e){return"string"==typeof e}(a);case"token":case"tokenlist":{const e=B(a)?JSON.parse(a):a;return Boolean(null==n?void 0:n.includes(e))}}var r}(i,l.value)||e.report({loc:c,messageId:"accessibilityValidAriaValue",data:{attribute:s}})}}}});function B(e){return"boolean"==typeof e||"false"===e||"true"===e}function k(e){return null==e}const w=/\[(.*)\]/;var L=l({name:"banana-in-box",meta:{type:"suggestion",docs:{description:"Ensures that the two-way data binding syntax is correct",category:"Best Practices",recommended:"error"},fixable:"code",schema:[],messages:{bananaInBox:"Invalid binding syntax. Use [(expr)] instead"}},defaultOptions:[],create(e){const t=u(e),n=e.getSourceCode();return{BoundEvent({name:a,sourceSpan:r}){const s=a.match(w);if(!s)return;const[,o]=s,i=`[(${o})]`,c=t.convertNodeSourceSpanToLoc(r),l=n.getIndexFromLoc(c.start);e.report({messageId:"bananaInBox",loc:c,fix:e=>e.replaceTextRange([l,l+a.length+2],i)})}}}});let N=null;function O(){return N||(N=new Set(a.dom.keys()))}const P=new Set(["presentation","none",p]);function F(e){if("string"==typeof e){if("true"===e)return!0;if("false"===e)return!1}return e}let $=null,j=null,D=null;var q=l({name:"click-events-have-key-events",meta:{type:"suggestion",docs:{description:"Ensures that the click event is accompanied with at least one key event keyup, keydown or keypress.",category:"Best Practices",recommended:!1},schema:[],messages:{clickEventsHaveKeyEvents:"click must be accompanied by either keyup, keydown or keypress event for accessibility."}},defaultOptions:[],create:e=>({Element(t){if(!O().has(t.name))return;if(function(e){const t=d(e,"role");return null!==t&&P.has(t)}(t)||function(e){if("INPUT"===e.name.toUpperCase()){const t=d(e,"type");if("string"==typeof t&&"HIDDEN"===t.toUpperCase())return!0}const t=F(d(e,"aria-hidden"));return t===p||!0===t}(t)||function(e){return O().has(e.name)&&function(e){function t(t){return e.name===t.name&&function(e=[],t){const n=[...t.attributes,...t.inputs];return e.every(e=>n.some(n=>"a"===t.name&&"routerLink"===n.name||e.name===n.name&&(!e.value||e.value===F(d(t,e.name)))))}(t.attributes,e)}return!!function(){if(null===$){const e=[...a.roles.keys()],t=[...a.elementRoles],n=new Set(e.filter(e=>{const t=a.roles.get(e);return!t.abstract&&"progressbar"!==e&&t.superClass.some(e=>e.includes("widget"))}).concat("toolbar"));$=t.reduce((e,[t,a])=>([...a].some(e=>n.has(e))&&e.push(t),e),[])}return $}().some(t)||!function(){if(null===j){const e=[...a.roles.keys()],t=[...a.elementRoles],n=new Set(e.filter(e=>{const t=a.roles.get(e);return!t.abstract&&"toolbar"!==e&&!t.superClass.some(e=>e.includes("widget"))}).concat("progressbar"));j=t.reduce((e,[t,a])=>([...a].every(e=>n.has(e))&&e.push(t),e),[])}return j}().some(t)&&!!function(){if(null===D){const{AXObjects:e,elementAXObjects:t}=require("axobject-query"),n=new Set(Array.from(e.keys()).filter(t=>"widget"===e.get(t).type));D=[...t].reduce((e,[t,a])=>([...a].every(e=>n.has(e))&&e.push(t),e),[])}return D}().some(t)}(e)}(t))return;let n=!1,r=!1;for(const e of t.outputs)n="click"===e.name,r=e.name.startsWith("keyup")||e.name.startsWith("keydown")||e.name.startsWith("keypress");if(!n||r)return;const s=u(e).convertNodeSourceSpanToLoc(t.sourceSpan);e.report({loc:s,messageId:"clickEventsHaveKeyEvents"})}})}),R=l({name:"conditional-complexity",meta:{type:"suggestion",docs:{description:"The conditional complexity should not exceed a rational limit",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{maxComplexity:{minimum:1,type:"number"}},additionalProperties:!1}],messages:{"conditionalСomplexity":'The conditional complexity "{{totalComplexity}}" exceeds the defined limit "{{maxComplexity}}"'}},defaultOptions:[{maxComplexity:5}],create(e,[{maxComplexity:t}]){m(e);const a=e.getSourceCode();return{BoundAttribute(r){if(!r.value.source)return;const s=W(H((M||(M=new n.Parser(new n.Lexer))).parseBinding(r.value.source,"",0).ast));if(s<=t)return;const{sourceSpan:{start:o,end:i}}=r.value;e.report({loc:{start:a.getLocFromIndex(o),end:a.getLocFromIndex(i)},messageId:"conditionalСomplexity",data:{maxComplexity:t,totalComplexity:s}})},Interpolation({expressions:n}){for(const r of n){const n=W(r);if(n<=t)continue;const{sourceSpan:{start:s,end:o}}=r;e.report({loc:{start:a.getLocFromIndex(s),end:a.getLocFromIndex(o)},messageId:"conditionalСomplexity",data:{maxComplexity:t,totalComplexity:n}})}}}}});function H(e){return e instanceof n.BindingPipe?e.exp:e}let M=null;function W(e){const t=H(e);if(!(t instanceof n.Binary||t instanceof n.Conditional))return 0;let a=1;return t instanceof n.Binary&&(t.left instanceof n.Binary&&(a+=W(t.left)),t.right instanceof n.Binary&&(a+=W(t.right))),t instanceof n.Conditional&&(a+=W(t.condition)+W(t.trueExp)+W(t.falseExp)),a}var U=l({name:"cyclomatic-complexity",meta:{type:"suggestion",docs:{description:"Checks cyclomatic complexity against a specified limit. It is a quantitative measure of the number of linearly independent paths through a program's source code",category:"Best Practices",recommended:!1},schema:[{type:"object",properties:{maxComplexity:{type:"number",minimum:1}},additionalProperties:!1}],messages:{cyclomaticComplexity:'The cyclomatic complexity "{{totalComplexity}}" exceeds the defined limit "{{maxComplexity}}"'}},defaultOptions:[{maxComplexity:5}],create(e,[{maxComplexity:t}]){let n=0;const a=u(e);return{'BoundAttribute[name=/^(ngForOf|ngIf|ngSwitchCase)$/], TextAttribute[name="ngSwitchDefault"]'({sourceSpan:r}){if(n+=1,n<=t)return;const s=a.convertNodeSourceSpanToLoc(r);e.report({messageId:"cyclomaticComplexity",loc:s,data:{maxComplexity:t,totalComplexity:n}})}}}});const V=["Text","Icu"],_=["class","style","color","svgIcon","href","src","id","lang","charset","height","width","target","type","colspan","uiSref","uiSrefActive","ui-view","xmlns","stroke-width","stroke","fill","viewBox","tabindex","formControlName"],K=[],z=/[A-Z]/i,J={checkId:!0,checkText:!0,checkAttributes:!0,ignoreAttributes:[""],ignoreTags:[],boundTextAllowedPattern:""};var X=l({name:"i18n",meta:{type:"suggestion",docs:{description:"Helps to ensure following best practices for i18n. Checks for missing i18n attributes on elements and non-ignored attributes containing text. Can also highlight tags that do not use Custom ID (@@) feature. Default Config = "+JSON.stringify(J),category:"Best Practices",recommended:!1},fixable:"code",schema:[{type:"object",properties:{checkId:{type:"boolean"},checkText:{type:"boolean"},checkAttributes:{type:"boolean"},ignoreAttributes:{type:"array",items:{type:"string"}},ignoreTags:{type:"array",items:{type:"string"}},boundTextAllowedPattern:{type:"string"}},additionalProperties:!1}],messages:{i18nId:"Missing custom message identifier. For more information visit https://angular.io/guide/i18n#use-a-custom-id-with-a-description",i18nIdOnAttrib:"Missing custom message identifier on attribute '{{attribName}}'. For more information visit https://angular.io/guide/i18n#use-a-custom-id-with-a-description",i18nText:"Each element containing text node should have an i18n attribute. See https://angular.io/guide/i18n",i18nAttrib:"Attribute '{{attribName}}' has no corresponding i18n attribute. See https://angular.io/guide/i18n#translate-attributes",i18nSuggestIgnore:"Add the attribute name '{{attribName}}' to the ignoreAttributes option in the eslint config."}},defaultOptions:[J],create(e,[t]){const n=u(e),a=e.getSourceCode(),{checkId:r,checkText:s,checkAttributes:o,ignoreAttributes:i,ignoreTags:c,boundTextAllowedPattern:l}=t,m=c&&c.length>0?c:K,p=l?new RegExp(l):z,d=[..._];function g(t,i){const c=n.convertNodeSourceSpanToLoc(t.sourceSpan);let l=a.getIndexFromLoc(c.start)+1;l+=i.length,t.attributes.forEach(t=>{t.i18n?r&&!t.i18n.customId&&e.report({messageId:"i18nIdOnAttrib",loc:c,data:{attribName:t.name}}):!(o&&t.value&&"string"==typeof t.value&&t.value.length>0&&"true"!==t.value&&"false"!==t.value)||function(e){let t=e;return t.endsWith("px")&&(t=t.substr(0,t.length-2)),String(Number(t))===String(t)}(t.value)||t.name.startsWith(":xml")||d.includes(t.name)||d.includes(i+"["+t.name+"]")||e.report({messageId:"i18nAttrib",loc:c,data:{attribName:t.name},fix:e=>e.replaceTextRange([l,l]," i18n-"+t.name),suggest:[{messageId:"i18nSuggestIgnore",data:{attribName:t.name},fix:e=>e.insertTextBeforeRange([0,0],"")}]})}),t.i18n?r&&(t.i18n.customId||e.report({messageId:"i18nId",loc:c})):!s||m&&-1!==m.indexOf(t.name)||t.children&&t.children.some(e=>V.includes(e.type)&&/\S/.test(e.value)||"BoundText"===e.type&&p.test(e.value.ast.strings.join("").trim()))&&e.report({messageId:"i18nText",loc:c,fix:e=>e.replaceTextRange([l,l]," i18n")})}return i&&i.length>0&&d.push(...i),{Element(e){g(e,e.name)},Template(e){g(e,e.tagName)}}}}),Y=l({name:"mouse-events-have-key-events",meta:{type:"suggestion",docs:{description:"Ensures that the Mouse Events mouseover and mouseout are accompanied with Key Events focus and blur.",category:"Best Practices",recommended:!1},schema:[],messages:{mouseOverEventHasFocusEvent:"mouseover must be accompanied by focus event for accessibility.",mouseOutEventHasBlurEvent:"mouseout must be accompanied by blur event for accessibility"}},defaultOptions:[],create(e){const t=u(e);return{Element(n){let a=!1,r=!1,s=!1,o=!1;for(const e of n.outputs)a="mouseover"===e.name,r="mouseout"===e.name,s="focus"===e.name,o="blur"===e.name;if(!a&&!r)return;const i=t.convertNodeSourceSpanToLoc(n.sourceSpan);a&&!s&&e.report({loc:i,messageId:"mouseOverEventHasFocusEvent"}),r&&!o&&e.report({loc:i,messageId:"mouseOutEventHasBlurEvent"})}}}}),Z=l({name:"no-any",meta:{type:"suggestion",docs:{description:'The use of "$any" nullifies the compile-time benefits of the Angular\'s type system.',category:"Best Practices",recommended:!1},schema:[],messages:{noAny:'Avoid using "$any" in templates'}},defaultOptions:[],create(e){m(e);const t=e.getSourceCode();return{'MethodCall[name="$any"][receiver.expression=undefined][receiver.name=undefined]'({sourceSpan:{end:n,start:a}}){e.report({messageId:"noAny",loc:{start:t.getLocFromIndex(a),end:t.getLocFromIndex(n)}})}}}}),G=l({name:"no-autofocus",meta:{type:"suggestion",docs:{description:"Ensure that autofocus attribute is not used",category:"Best Practices",recommended:!1},schema:[],messages:{noAutofocus:"autofocus attribute should not be used, as it reduces usability and accessibility for users"}},defaultOptions:[],create(e){const t=u(e);return{'TextAttribute[name="autofocus"], BoundAttribute[name="autofocus"]'(n){const a=t.convertNodeSourceSpanToLoc(n.sourceSpan);e.report({loc:a,messageId:"noAutofocus"})}}}}),Q=l({name:"no-call-expression",meta:{type:"suggestion",docs:{description:"Disallows calling expressions in templates, except for output handlers",category:"Best Practices",recommended:!1},schema:[],messages:{noCallExpression:"Avoid calling expressions in templates"}},defaultOptions:[],create(e){m(e);const t=e.getSourceCode();return{':not(BoundEvent) > * > :matches(MethodCall[name!="$any"], SafeMethodCall)'({sourceSpan:{end:n,start:a}}){e.report({messageId:"noCallExpression",loc:{start:t.getLocFromIndex(a),end:t.getLocFromIndex(n)}})}}}}),ee=l({name:"no-distracting-elements",meta:{type:"suggestion",docs:{description:"Enforces that no distracting elements are used",category:"Best Practices",recommended:!1},schema:[],messages:{noDistractingElements:"Do not use <{{element}}> elements as they can create visual accessibility issues and are deprecated"}},defaultOptions:[],create(e){const t=u(e);return{"Element[name=/^(blink|marquee)$/]"({name:n,sourceSpan:a}){const r=t.convertNodeSourceSpanToLoc(a);e.report({loc:r,messageId:"noDistractingElements",data:{element:n}})}}}}),te=l({name:"no-duplicate-attributes",meta:{type:"problem",docs:{description:"Ensures that there are no duplicate input properties or output event listeners",category:"Possible Errors",recommended:!1},schema:[{type:"object",properties:{allowTwoWayDataBinding:{type:"boolean"}},additionalProperties:!1}],messages:{noDuplicateAttributes:'Duplicate attribute "{{attributeName}}"'}},defaultOptions:[{allowTwoWayDataBinding:!0}],create(e,[{allowTwoWayDataBinding:t}]){const n=u(e);return{Element({inputs:a,outputs:r,attributes:s}){[...ae([...a,...s]),...ae(t?r.filter(e=>!a.some(t=>t.sourceSpan.start===e.sourceSpan.start&&t.sourceSpan.end===e.sourceSpan.end)):r)].forEach(t=>{const a=n.convertNodeSourceSpanToLoc(t.sourceSpan);e.report({messageId:"noDuplicateAttributes",loc:a,data:{attributeName:ne(t)}})})}}}});function ne(e){if("type"in e)if("BoundAttribute"===e.type)switch(e.__originalType){case 2:return`class.${e.name}`;case 3:return`style.${e.name}${e.unit?"."+e.unit:""}`;case 4:return`@${e.name}`}else if("BoundEvent"===e.type){if(1===e.__originalType)return`@${e.name}${e.phase?"."+e.phase:""}`;if(e.target)return`${e.target}:${e.name}`}return e.name}function ae(e){return e.filter(t=>e.some(e=>e!==t&&ne(e)===ne(t)))}var re=l({name:"no-negated-async",meta:{type:"suggestion",docs:{description:"Ensures that strict equality is used when evaluating negations on async pipe output",category:"Best Practices",recommended:"error"},schema:[],messages:{noNegatedAsync:"Async pipes should not be negated. Use (observable | async) === (false | null | undefined) to check its value instead",noLooseEquality:"Async pipes must use strict equality `===` when comparing with `false`"}},defaultOptions:[],create(e){m(e);const t=e.getSourceCode();return{"PrefixNot > BindingPipe[name=async]"({parent:n}){e.report({messageId:"noNegatedAsync",loc:{start:t.getLocFromIndex(n.sourceSpan.start),end:t.getLocFromIndex(n.sourceSpan.end)}})},'Binary[operation="=="] > BindingPipe[name=async]'({parent:n}){e.report({messageId:"noLooseEquality",loc:{start:t.getLocFromIndex(n.sourceSpan.start),end:t.getLocFromIndex(n.sourceSpan.end)}})}}}}),se=l({name:"no-positive-tabindex",meta:{type:"suggestion",docs:{description:"Ensures that the tabindex attribute is not positive",category:"Best Practices",recommended:!1},schema:[],messages:{noPositiveTabindex:"tabindex attribute cannot be positive"}},defaultOptions:[],create(e){const t=u(e);return{'BoundAttribute[name="tabindex"][value.ast.value>0], TextAttribute[name="tabindex"][value>0]'({sourceSpan:n}){const a=t.convertNodeSourceSpanToLoc(n);e.report({loc:a,messageId:"noPositiveTabindex"})}}}});function oe(){return(oe=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var ie=l({name:"use-track-by-function",meta:{type:"suggestion",docs:{description:"Ensures trackBy function is used.",category:"Best Practices",recommended:!1},schema:[],messages:{useTrackByFunction:"Missing trackBy function in ngFor directive"}},defaultOptions:[],create(e){const t=u(e);return{'BoundAttribute.inputs[name="ngForOf"]'(n){if(n.parent.inputs.some(e=>"BoundAttribute"===e.type&&"ngForTrackBy"===e.name))return;const a=t.convertNodeSourceSpanToLoc(n.sourceSpan);e.report({messageId:"useTrackByFunction",loc:a})},'BoundAttribute.templateAttrs[name="ngForOf"]'(n){const a=n.parent.templateAttrs;if(a.some(e=>"BoundAttribute"===e.type&&"ngForTrackBy"===e.name))return;const r=t.convertNodeSourceSpanToLoc(a[0].sourceSpan).start,s=t.convertNodeSourceSpanToLoc(a[a.length-1].sourceSpan).end,o={start:oe({},r,{column:r.column-1}),end:oe({},s,{column:s.column+1})};e.report({messageId:"useTrackByFunction",loc:o})}}}});module.exports={configs:{all:{extends:"./configs/base.json",rules:{"@angular-eslint/template/accessibility-alt-text":"error","@angular-eslint/template/accessibility-elements-content":"error","@angular-eslint/template/accessibility-label-for":"error","@angular-eslint/template/accessibility-table-scope":"error","@angular-eslint/template/accessibility-valid-aria":"error","@angular-eslint/template/banana-in-box":"error","@angular-eslint/template/click-events-have-key-events":"error","@angular-eslint/template/conditional-complexity":"error","@angular-eslint/template/cyclomatic-complexity":"error","@angular-eslint/template/i18n":"error","@angular-eslint/template/mouse-events-have-key-events":"error","@angular-eslint/template/no-any":"error","@angular-eslint/template/no-autofocus":"error","@angular-eslint/template/no-call-expression":"error","@angular-eslint/template/no-distracting-elements":"error","@angular-eslint/template/no-duplicate-attributes":"error","@angular-eslint/template/no-negated-async":"error","@angular-eslint/template/no-positive-tabindex":"error","@angular-eslint/template/use-track-by-function":"error"}},base:{parser:"@angular-eslint/template-parser",plugins:["@angular-eslint/template"]},recommended:{extends:"./configs/base.json",rules:{"@angular-eslint/template/banana-in-box":"error","@angular-eslint/template/no-negated-async":"error"}},"process-inline-templates":{parser:"@typescript-eslint/parser",parserOptions:{ecmaVersion:2020,sourceType:"module"},plugins:["@angular-eslint/template"],processor:"@angular-eslint/template/extract-inline-html"}},processors:c,rules:{"accessibility-alt-text":g,"accessibility-elements-content":x,"accessibility-label-for":I,"accessibility-table-scope":E,"accessibility-valid-aria":C,"banana-in-box":L,"conditional-complexity":R,"click-events-have-key-events":q,"cyclomatic-complexity":U,i18n:X,"mouse-events-have-key-events":Y,"no-any":Z,"no-autofocus":G,"no-call-expression":Q,"no-distracting-elements":ee,"no-duplicate-attributes":te,"no-negated-async":re,"no-positive-tabindex":se,"use-track-by-function":ie}};
